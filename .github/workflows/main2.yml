name: Gaming RDP System

on:
  workflow_dispatch:
    inputs:
      os_choice:
        description: 'Choose Operating System'
        required: true
        default: 'windows'
        type: choice
        options:
        - windows
        - ubuntu
        - both

jobs:
  windows-rdp:
    if: github.event.inputs.os_choice == 'windows' || github.event.inputs.os_choice == 'both'
    runs-on: windows-latest
    timeout-minutes: 9999

    steps:
    - name: Windows RDP Setup
      run: |
        Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
        Expand-Archive ngrok.zip
        .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Install Microsoft Store and AppX
      run: |
        Get-AppXPackage *WindowsStore* -AllUsers | Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}
        Add-AppxPackage -RegisterByFamilyName -MainPackage Microsoft.DesktopAppInstaller_8wekyb3d8bbwe
        Get-AppxPackage -AllUsers| Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml"}

    - name: Configure Windows RDP
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
        Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "Vulkan-Gaming" -Force)

    - name: Start Windows Tunnel
      run: Start-Process Powershell -ArgumentList '-Noexit -Command ".\ngrok\ngrok.exe tcp 3389"'

    - name: Keep Alive
      run: |
        $i = 999999
        do {
            Write-Host "Windows RDP Active - $i minutes remaining"
            Sleep 60
            $i--
        } while ($i -gt 0)

  ubuntu-gaming:
    if: github.event.inputs.os_choice == 'ubuntu' || github.event.inputs.os_choice == 'both'
    runs-on: ubuntu-latest
    timeout-minutes: 357

    steps:
    - name: Gaming Environment Setup
      run: |
        sudo apt-get update
        sudo DEBIAN_FRONTEND=noninteractive apt-get install -y xfce4 xfce4-goodies
        sudo apt-get install -y xrdp firefox wine lutris
        sudo apt-get install -y flatpak gnome-software-plugin-flatpak
        flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
        sudo systemctl enable xrdp
        sudo useradd -m gaming
        echo "gaming:Vulkan-Gaming" | sudo chpasswd
        sudo usermod -aG sudo gaming
        echo "gaming ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/gaming

    - name: Install Gaming Components
      run: |
        sudo add-apt-repository ppa:graphics-drivers/ppa -y
        sudo apt-get update
        sudo apt-get install -y nvidia-driver-470 vulkan-tools mesa-vulkan-drivers
        sudo apt-get install -y obs-studio vlc gimp
        mkdir -p /home/gaming/{persistent,Downloads,Games}
        sudo chown -R gaming:gaming /home/gaming/

    - name: Configure Gaming Services
      run: |
        sudo sed -i 's/3389/3390/g' /etc/xrdp/xrdp.ini
        sudo systemctl restart xrdp
        wget https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.zip
        unzip ngrok-v3-stable-linux-amd64.zip
        ./ngrok authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
        nohup ./ngrok tcp 3390 &
        sleep 10
        curl http://localhost:4040/api/tunnels | jq -r .tunnels[0].public_url

    - name: Keep System Active
      run: |
        while true; do
          echo "ðŸŽ® Gaming System Active - $(date)"
          sleep 300
        done
