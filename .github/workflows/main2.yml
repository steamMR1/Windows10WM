name: Ultimate Gaming Systems

on:
  workflow_dispatch:
    inputs:
      os_choice:
        description: 'ðŸŽ® Select Gaming Platform'
        required: true
        default: 'windows'
        type: choice
        options:
        - windows
        - ubuntu
        - both

jobs:
  windows-rdp:
    if: github.event.inputs.os_choice == 'windows' || github.event.inputs.os_choice == 'both'
    runs-on: windows-latest
    timeout-minutes: 525600

    steps:
    - name: Prep System
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072

    - name: Download Ngrok
      run: |
        Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
        Expand-Archive ngrok.zip
        .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Enable RDP
      run: | 
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1

    - name: Create Tunnel
      run: Start-Process Powershell -ArgumentList '-Noexit -Command ".\ngrok\ngrok.exe tcp 3389"'

    - name: Set Password & Connect
      run: |
        Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "Vulkan-Gaming" -Force)
        $Env:DISPLAY=":0"
        echo "ðŸŽ® Windows Gaming Ready!"
        echo "Username: runneradmin"
        echo "Password: Vulkan-Gaming"

    - name: Keep Alive
      run: |
        $i = 525600
        while($i -gt 0) {
            Write-Host "âš¡ Windows Active: $i minutes remaining"
            Start-Sleep -Seconds 60
            $i--
        }

  ubuntu-gaming:
    if: github.event.inputs.os_choice == 'ubuntu' || github.event.inputs.os_choice == 'both'
    runs-on: ubuntu-latest
    timeout-minutes: 525600

    steps:
    - name: Initial Setup
      run: |
        sudo apt update
        sudo DEBIAN_FRONTEND=noninteractive apt install -y ubuntu-desktop xrdp xfce4 xfce4-goodies
        sudo apt install -y xfce4-terminal
        echo xfce4-session > ~/.xsession
        sudo service xrdp restart

    - name: Configure XRDP
      run: |
        sudo sed -i.bak '/fi/a #xrdp multiple users configuration \n mate-session \n' /etc/xrdp/startwm.sh
        sudo ufw allow 3389/tcp
        sudo ufw reload
        sudo systemctl enable xrdp
        sudo systemctl restart xrdp

    - name: Setup Gaming User
      run: |
        sudo useradd -m -s /bin/bash gaming
        sudo usermod -aG sudo gaming
        echo "gaming:Vulkan-Gaming" | sudo chpasswd
        sudo echo "gaming ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/gaming
        sudo chmod 0440 /etc/sudoers.d/gaming

    - name: Install Gaming Essentials
      run: |
        sudo apt install -y wine lutris mesa-utils
        sudo apt install -y firefox

    - name: Setup Ngrok & Display Connection
      run: |
        wget https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.zip
        unzip ngrok-v3-stable-linux-amd64.zip
        ./ngrok authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
        ./ngrok tcp 3389 --log=stdout > ngrok.log &
        sleep 10
        NGROK_URL=$(curl --silent http://127.0.0.1:4040/api/tunnels | jq -r .tunnels[0].public_url)
        echo "ðŸŽ® Ubuntu Gaming Ready!"
        echo "Connect using RDP to: $NGROK_URL"
        echo "Username: gaming"
        echo "Password: Vulkan-Gaming"

    - name: Keep Alive
      run: |
        while true; do
          echo "âš¡ Ubuntu Active - $(date)"
          sleep 300
        done
